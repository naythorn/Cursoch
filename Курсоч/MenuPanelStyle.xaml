<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Курсоч">
    <Style  x:Key="MenuBorderBox" TargetType="Border">
        <Style.Setters>
            <Setter Property="Background" Value="#3A7071"/>
            <Setter Property="Height" Value="290"/>
            <Setter Property="Width" Value="270"/>
            <Setter Property="CornerRadius" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style.Setters>
    </Style>
    <!--Button templates-->
    <ControlTemplate TargetType="Button" x:Key="Start">
        <Border Style="{DynamicResource BorderStart}">
            <ContentControl  HorizontalAlignment="Center" VerticalAlignment="Center" Content="Начать тест"/>
        </Border>
    </ControlTemplate>
    <ControlTemplate TargetType="Button" x:Key="YourType">
        <Border Style="{DynamicResource BorderYourType}">
            <ContentControl  HorizontalAlignment="Center" VerticalAlignment="Center" Content="Мой тип"/>
        </Border>
    </ControlTemplate>
    <ControlTemplate TargetType="Button" x:Key="MyTests">
        <Border Style="{DynamicResource BorderMyTests}">
            <ContentControl  HorizontalAlignment="Center" VerticalAlignment="Center" Content="Мои тесты"/>
        </Border>
    </ControlTemplate>
    <ControlTemplate TargetType="Button" x:Key="Personalities">
        <Border Style="{DynamicResource BorderPersonalities}">
            <ContentControl  HorizontalAlignment="Center" VerticalAlignment="Center" Content="Типы личностей"/>
        </Border>
    </ControlTemplate>
    <ControlTemplate TargetType="Button" x:Key="ChangeUser">
        <Border Style="{DynamicResource BorderChangeUser}">
            <ContentControl  HorizontalAlignment="Center" VerticalAlignment="Center" Content="Сменить пользователя"/>
        </Border>
    </ControlTemplate>
    <!--Button borders-->
    <Style x:Key="BorderStart" TargetType="Border" >
        <Style.Setters>
            <Setter Property="Border.CornerRadius" Value="20"/>
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="#51B787"></Setter>
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=buttonStart, Path=IsPressed}"
                        Value="True">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#53C990"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BorderYourType" TargetType="Border" >
        <Style.Setters>
            <Setter Property="Border.CornerRadius" Value="20"/>
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="#86BE4E"></Setter>
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=buttonYourType, Path=IsPressed}"
                        Value="True">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#96CD5F"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BorderMyTests" TargetType="Border" >
        <Style.Setters>
            <Setter Property="Border.CornerRadius" Value="20"/>
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="#BCBE4E"></Setter>
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=buttonMyTests, Path=IsPressed}"
                        Value="True">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#CACC60"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BorderPersonalities" TargetType="Border" >
        <Style.Setters>
            <Setter Property="Border.CornerRadius" Value="20"/>
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="#BEA64E"></Setter>
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=buttonPersonalities, Path=IsPressed}"
                        Value="True">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#CFB762"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="BorderChangeUser" TargetType="Border" >
        <Style.Setters>
            <Setter Property="Border.CornerRadius" Value="20"/>
            <Setter Property="Width" Value="180"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="#B2879C"></Setter>
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=buttonChangeUser, Path=IsPressed}"
                        Value="True">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#D1B0C1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!---Standart StackPanel-->
    <Style  x:Key="StandartStackPanel" TargetType="StackPanel">
        <Style.Setters>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style.Setters>
    </Style>

</ResourceDictionary>